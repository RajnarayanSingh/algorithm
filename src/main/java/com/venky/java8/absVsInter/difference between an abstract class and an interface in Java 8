difference between an abstract class and an interface in Java 8 ?

Abstract class is a class and an interface is an interface.A class can have a state which can be modified
by non-abstract methods but an interface cannot have the state because they can't have instance variables.


define constructors inside an abstract class, but you cannot define constructors inside an interface in Java.

By using abstract class  you can  achieve only single level inheritance while multiple inheritance is possible though Interface


Abstract class vs Interface
Type of methods: Interface can have only abstract methods. An abstract class can have abstract and non-abstract methods. From Java 8, it can have default and static methods also.
Final Variables: Variables declared in a Java interface are by default final. An abstract class may contain non-final variables.
Type of variables: Abstract class can have final, non-final, static and non-static variables. The interface has only static and final variables.
Implementation: Abstract class can provide the implementation of the interface. Interface can’t provide the implementation of an abstract class.
Inheritance vs Abstraction: A Java interface can be implemented using the keyword “implements” and an abstract class can be extended using the keyword “extends”.
Multiple implementations: An interface can extend another Java interface only, an abstract class can extend another Java class and implement multiple Java interfaces.
Accessibility of Data Members: Members of a Java interface are public by default. A Java abstract class can have class members like private, protected, etc.
